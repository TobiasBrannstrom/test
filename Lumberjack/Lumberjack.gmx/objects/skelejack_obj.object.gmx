<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_skelejack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variables


// - - - - - - - - - - - - - - - - -

// Variables
grav = 0.2
hsp = 0;
vsp = 0;
jumpspeed = 6;
movespeed = 4;

// - - - - - - - - - - - - - - - - - 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// - - - - - - - - - - - - - - - - - - - -

// Player Input

key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
//key_mouse1 = keyboard_check_pressed(vk_numpad9);

// Input reaction (move left and right)

move = key_left + key_right;
hsp = move * movespeed;

// Jumping
if (vsp &lt; 10) vsp += grav;


if (place_meeting(x, y+1, obj_cloud))
{
    vsp = key_jump * -jumpspeed
}

// Horizontal Collision
if (place_meeting(x+hsp, y, obj_cloud))
{
    while(!place_meeting(x+sign(hsp), y, obj_cloud))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

// Vertical Collision
if (place_meeting(x, y+vsp, obj_cloud))
{
    while(!place_meeting(x, y+sign(vsp), obj_cloud))
    {
        y += sign(vsp);
    }
    vsp = 0;
}

y += vsp;

// Animate

if (move!=0) image_xscale = move;
if (place_meeting(x,y+1, obj_cloud))
{
    if (move!=0) sprite_index = spr_skelejack_run;
    else sprite_index = spr_skelejack;
}
else 
{
    if (vsp &lt; 0) sprite_index = spr_skelejack_jump;
    else sprite_index = spr_skelejack_fall;
}
// Attack animation

if (mouse_check_button(mb_left))
{
image_speed = 0.2;
sprite_index = spr_skelejack_attack;
}


// Staying inside the room
x = min(x, room_width-15);
x = max(x, 15);

// - - - - - - - - - - - - - - - - - - - -


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>125,125</point>
  </PhysicsShapePoints>
</object>
